class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.size()==1)return nums[0];
        return max(ans(nums,0,nums.size()-2),ans(nums,1,nums.size()-1));//数组连成环，唯一有影响的就是首尾，而首尾最多只能取其一，则分别当做两个线性数组进行分析最后取最大值即可
    }

    int ans(vector<int>& nums,int start,int end){//函数构建要统一，start，end应该一用到底，这样不容易混淆，dp数组浪费一个空间不重要
        if(start == end) return nums[start];
        vector<int> dp(nums.size(),0);
        dp[start]=nums[start];
        dp[start+1]=max(nums[start+1],nums[start]);

        for(int i=start+2;i<=end;i++){
            dp[i]=max(dp[i-1],dp[i-2]+nums[i]);
        }
        return dp[end];
    }
};
